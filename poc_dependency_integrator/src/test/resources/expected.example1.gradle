/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5.1/userguide/java_library_plugin.html
 */
buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
            mavenContent {
                snapshotsOnly()
            }
        }
    }
    dependencies {
        classpath "com.github.ehmkah:don-scannero:0.0.7-SNAPSHOT"
    }
}


plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

apply plugin: "com.github.ehmkah.don-scannero"
repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
    // version is intended to be unset, because spring-dependency-management sets it for us
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}


test {
    useJUnitPlatform()
}


